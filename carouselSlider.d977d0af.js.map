{"version":3,"sources":["js/carouselSlider.js"],"names":["timer","slideIndex","createSlideshow","el","plusSlides","n","showSlides","currentSlide","i","slides","document","querySelectorAll","length","style","display","startTimer","setInterval","stopTimer","clearInterval","addEventListener","querySelector","heroSliderSetup","dimension","carouselObj","createSlider","slider","transX","objWidth","upperLimit","timerObj","leftControl","rightControl","setAnimationTransition","setTranslate","setSlideTimer","value","transform","animated","transition"],"mappings":";;;AA6LA,aA7LA,QAAA,qBACA,IAAIA,EAAQ,KAERC,EAAa,EAMjB,SAASC,EAAgBC,IAoDzB,SAASC,EAAWC,GAClBC,EAAWL,GAAcI,GAI3B,SAASE,EAAaF,GACpBC,EAAWL,EAAaI,GAG1B,SAASC,EAAWD,GACdG,IAAAA,EACAC,EAASC,SAASC,iBAAiB,2BAQlCH,IANDP,EADAI,EAAII,EAAOG,OACE,EACJP,EAAI,EACEI,EAAOG,OAEPP,EAEdG,EAAI,EAAGA,EAAIC,EAAOG,OAAQJ,IAC3BC,EAAOD,GAAGK,MAAMC,QAAU,OAE9BL,EAAOR,EAAW,GAAGY,MAAMC,QAAU,QAGvC,SAASC,IACO,OAAVf,IACFA,EAAQgB,YAAY,WAClBV,EAAWL,EAAW,IACrB,MAIP,SAASgB,IACPC,cAAclB,GACdA,EAAQ,KA5FVU,SAASS,iBAAiB,mBAAoB,WAC5Cb,EAAWL,GACXc,MA8FFL,SAASU,cAAc,uBAAuBD,iBAAiB,QAAS,WACtEF,IACAb,EAAW,GACXW,MAEFL,SAASU,cAAc,uBAAuBD,iBAAiB,QAAS,WACtEF,IACAb,GAAY,GACZW,MAKF,IAAMM,EAAkB,CACtBC,UAAY,IACZC,YAAcb,SAASU,cAAc,UAGvC,SAASI,EAA6C,GAA5BF,IAAAA,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,YAC7BE,EAASF,EAAYH,cAAc,qBACrCM,GAAWJ,EACXK,EAAWL,EACXM,GAAyB,EAAVN,EAIfO,EAAS,KAETC,EAAcP,EAAYH,cAAc,oCACxCW,EAAeR,EAAYH,cAAc,qCAE7CU,EAAYX,iBAAiB,QAAS,WAChCU,IACFX,cAAcW,GACdA,EAAS,MAEPH,GAbW,IAcfM,IAEAC,EADAP,GAAQC,GAERO,OAGFH,EAAaZ,iBAAiB,QAAS,WACjCU,IACFX,cAAcW,GACdA,EAAS,MAEPH,GAAQE,IACZI,IAEAC,EADAP,GAAQC,GAERO,OAIFT,EAAON,iBAAiB,gBAAiB,WACnCO,GAAQE,GACVI,GAAuB,GAEvBC,EADAP,EApCa,EAoCKC,IAETD,GAtCI,IAuCbM,GAAuB,GAEvBC,EADAP,EAAOE,EAAW,QAKhBM,IAAAA,EAAgB,WACfL,IACHA,EAAWb,YAAY,WACrBgB,IAEAC,EADAP,GAAQC,IAEP,OAIDM,EAAe,SAACE,GAClBV,EAAOZ,MAAMuB,UAA0BD,cAAAA,OAAAA,EAAvC,OAGEH,EAAyB,WAACK,IAAAA,IAAS,UAAA,OAAA,QAAA,IAAA,UAAA,KAAA,UAAA,GACvCZ,OAAAA,EAAOZ,MAAMyB,WAAcD,EAAW,8BAAgC,QAGxEH,IAGFV,EAAaH","file":"carouselSlider.d977d0af.js","sourceRoot":"..\\src","sourcesContent":["import '../scss/main.scss';\r\nlet timer = null;\r\n\r\nlet slideIndex = 1;\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=> {\r\n  showSlides(slideIndex);\r\n  startTimer();\r\n})\r\n\r\nfunction createSlideshow(el) {\r\n  let slideIndex = 1;\r\n  let timer = null;\r\n  function plusSlides(n) {\r\n    showSlides(slideIndex += n);\r\n  }\r\n  \r\n  // Thumbnail image controls\r\n  function currentSlide(n) {\r\n    showSlides(slideIndex = n);\r\n  }\r\n\r\n  // Next/previous controls\r\n  function plusSlides(n) {\r\n    showSlides(slideIndex += n);\r\n  }\r\n\r\n  // Thumbnail image controls\r\n  function currentSlide(n) {\r\n    showSlides(slideIndex = n);\r\n  }\r\n  function showSlides(n) {\r\n    var i;\r\n    var slides = document.querySelectorAll(\".mobile-phone .mySlides\");\r\n    if (n > slides.length) {\r\n        slideIndex = 1\r\n      } else if (n < 1) {\r\n          slideIndex = slides.length\r\n      } else {\r\n          slideIndex = n;\r\n      }\r\n    for (i = 0; i < slides.length; i++) {\r\n        slides[i].style.display = \"none\";\r\n    }\r\n    slides[slideIndex-1].style.display = \"block\";\r\n  }\r\n  \r\n  function startTimer() {\r\n    if (timer === null) {\r\n      timer = setInterval(function() {\r\n        showSlides(slideIndex+1);\r\n      }, 4000);\r\n    }\r\n  }\r\n  \r\n  function stopTimer() {\r\n    clearInterval(timer);\r\n    timer = null;\r\n  }\r\n}\r\n\r\n// Next/previous controls\r\nfunction plusSlides(n) {\r\n  showSlides(slideIndex += n);\r\n}\r\n\r\n// Thumbnail image controls\r\nfunction currentSlide(n) {\r\n  showSlides(slideIndex = n);\r\n}\r\n\r\nfunction showSlides(n) {\r\n  var i;\r\n  var slides = document.querySelectorAll(\".mobile-phone .mySlides\");\r\n  if (n > slides.length) {\r\n      slideIndex = 1\r\n    } else if (n < 1) {\r\n        slideIndex = slides.length\r\n    } else {\r\n        slideIndex = n;\r\n    }\r\n  for (i = 0; i < slides.length; i++) {\r\n      slides[i].style.display = \"none\";\r\n  }\r\n  slides[slideIndex-1].style.display = \"block\";\r\n}\r\n\r\nfunction startTimer() {\r\n  if (timer === null) {\r\n    timer = setInterval(function() {\r\n      showSlides(slideIndex+1);\r\n    }, 4000);\r\n  }\r\n}\r\n\r\nfunction stopTimer() {\r\n  clearInterval(timer);\r\n  timer = null;\r\n}\r\n\r\n\r\ndocument.querySelector('.mobile-phone .next').addEventListener('click', function() {\r\n  stopTimer();\r\n  plusSlides(1);\r\n  startTimer();\r\n});\r\ndocument.querySelector('.mobile-phone .prev').addEventListener('click', function() {\r\n  stopTimer();\r\n  plusSlides(-1);\r\n  startTimer();\r\n});\r\n\r\n\r\n\r\nconst heroSliderSetup = {\r\n  dimension : 100,\r\n  carouselObj : document.querySelector(\"#hero\")\r\n}\r\n\r\nfunction createSlider ( { dimension, carouselObj } )  {\r\n  const slider = carouselObj.querySelector('.carousel__panels');\r\n  let transX = -(dimension);\r\n  let objWidth = dimension;\r\n  let upperLimit = -(dimension*4);\r\n  let lowerLimit = 0;\r\n  let reset=false;\r\n  let setTransition = false;\r\n  let timerObj=null;\r\n\r\n  let leftControl = carouselObj.querySelector('.carousel__control--left-control');\r\n  let rightControl = carouselObj.querySelector('.carousel__control--right-control');\r\n\r\n  leftControl.addEventListener('click', ()=>{\r\n    if (timerObj) {\r\n      clearInterval(timerObj);\r\n      timerObj=null;\r\n    }\r\n    if (transX>= lowerLimit) return;\r\n    setAnimationTransition();\r\n    transX+=objWidth;\r\n    setTranslate(transX);\r\n    setSlideTimer();\r\n  });\r\n  \r\n  rightControl.addEventListener('click', ()=>{\r\n    if (timerObj) {\r\n      clearInterval(timerObj);\r\n      timerObj=null;\r\n    }\r\n    if (transX<=upperLimit) return;\r\n    setAnimationTransition();\r\n    transX-=objWidth;\r\n    setTranslate(transX);\r\n    setSlideTimer();\r\n  });\r\n  \r\n  \r\n  slider.addEventListener('transitionend', ()=> {\r\n    if (transX<=upperLimit) {\r\n      setAnimationTransition(false);\r\n      transX=lowerLimit-objWidth;\r\n      setTranslate(transX);\r\n    } else if (transX>= lowerLimit) {\r\n      setAnimationTransition(false);\r\n      transX=upperLimit+100;\r\n      setTranslate(transX);\r\n    }\r\n  });\r\n  \r\n  const setSlideTimer = () => {\r\n    if (!timerObj) {\r\n      timerObj = setInterval(()=> {\r\n        setAnimationTransition();\r\n        transX-=objWidth;\r\n        setTranslate(transX);\r\n      }, 6000);\r\n    }\r\n  }\r\n  \r\n  const setTranslate = (value) => {\r\n      slider.style.transform = `translateX(${value}%)`;\r\n  }\r\n  \r\n  const setAnimationTransition = (animated=true) => \r\n    slider.style.transition = (animated ? 'transform 0.75s ease-in-out' : 'none');\r\n  \r\n  \r\n  setSlideTimer();\r\n}\r\n\r\ncreateSlider(heroSliderSetup);\r\n\r\n"]}